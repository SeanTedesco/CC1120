/*
 * stats.h
 *
 *  Created on: Apr. 8, 2021
 *      Author: seant
 */

#ifndef INC_STATS_H_
#define INC_STATS_H_

/****************************************************************************
 * INCLUDES
 */
#include <stdlib.h>
#include <stdint.h>
#include "main.h"

/****************************************************************************
 * TYPE DEFINITIONS
 */
typedef struct {
	uint16 rx_failed_cnt;
	uint16 rx_crc_failed_cnt;
	uint16 tx_failed_cnt;
	uint16 tx_frames_cnt;
	uint16 rx_frams_cnt;
	uint32 uptime_h;
	uint32 uptime_m;
	uint32 uptime_s;
	uint32 last_tick;
	float comms_temperature;
	float eps_temperature;
	float bat_temperature;
	int16 last_tx_error_code;
	int16 last_rx_error_code;
	uint32 battery_mV;
	int32 battery_mA;
	uint32 bus_3300_mA;
	uint32 bus_5000_mA;
	uint16 invalid_dest_frames_cnt;
	uint32 last_utc;
	uint8 rst_src;
	uint16 sw_on_cmd_cnt;
	uint16 sw_off_cmd_cnt;
	uint16 sw_cmd_failed_cnt;
} comms_rf_stat_t;

/****************************************************************************
 * FUNCTION PROTOTYPES
 */

void comms_rf_stats_init(comms_rf_stat_t *h);

void comms_rf_stats_update(comms_rf_stat_t *h);

void comms_rf_stats_set_reset_src(comms_rf_stat_t *h, uint8 src);

void comms_rf_stats_frame_received(comms_rf_stat_t *h, uint8 succesful, uint8 error);

void comms_rf_stats_frame_transmitted(comms_rf_stat_t *h, uint8 succesful, uint8 error);

void comms_rf_stats_invalid_dest_frame(comms_rf_stat_t *h);

void comms_rf_stats_invalid_crc_frame(comms_rf_stat_t *h);

void comms_rf_stats_get_temperature(comms_rf_stat_t *h);

void comms_rf_stats_wod_received(comms_rf_stat_t *h, const uint8 *obc_wod);

void comms_rf_stats_sw_cmd_received(comms_rf_stat_t *h, uint8 on);

void comms_rf_stats_sw_cmd_failed(comms_rf_stat_t *h);

#endif /* INC_STATS_H_ */



