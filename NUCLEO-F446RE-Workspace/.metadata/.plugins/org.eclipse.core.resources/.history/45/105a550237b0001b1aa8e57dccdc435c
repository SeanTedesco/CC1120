/*
 * ax25.h
 *
 *  Created on: May 8, 2021
 *      Author: seant
 */

#ifndef INC_AX25_H_
#define INC_AX25_H_

/****************************************************************************
 * INCLUDES
 */
#include <stdint.h>
//#include "utils.h"
#include "config.h"
#include "scrambler.h"
#include <limits.h>
#include <stddef.h>
#include <string.h>

/****************************************************************************
 * DEFINITIONS
 */
#define AX25_MAX_ADDR_LEN 28
#define AX25_MAX_FRAME_LEN 256
#define AX25_MIN_ADDR_LEN 14
#define AX25_SYNC_FLAG 0x7E
#define AX25_MIN_CTRL_LEN 1
#define AX25_MAX_CTRL_LEN 2
#define AX25_CALLSIGN_MAX_LEN 6
#define AX25_CALLSIGN_MIN_LEN 2
#define AX25_PREAMBLE_LEN 16
#define AX25_POSTAMBLE_LEN 16

/****************************************************************************
 * TYPE DEFINITIONS
 */
/**
 * AX.25 Frame types
 */
typedef enum
{
  AX25_I_FRAME, //!< AX25_I_FRAME Information frame
  AX25_S_FRAME, //!< AX25_S_FRAME Supervisory frame
  AX25_U_FRAME, //!< AX25_U_FRAME Unnumbered frame
  AX25_UI_FRAME /**!< AX25_UI_FRAME Unnumbered information frame */
} ax25_frame_type_t;

/**
 * The different states of the AX.25 decoder
 */
typedef enum
{
  AX25_NO_SYNC, //!< AX25_NO_SYNC when not frame has been seen yet
  AX25_IN_SYNC, //!< AX25_IN_SYNC the stating SYNC flag has been received
  AX25_FRAME_END//!< AX25_FRAME_END the trailing SYNC flag has been received
}ax25_decoding_state_t;

typedef enum
{
  AX25_ENC_FAIL, AX25_ENC_OK
} ax25_encode_status_t;

typedef enum
{
  AX25_DEC_NOT_READY = -56,
  AX25_DEC_CRC_FAIL = -55,
  AX25_DEC_SIZE_ERROR = -54,
  AX25_DEC_STOP_SYNC_NOT_FOUND = -53,
  AX25_DEC_START_SYNC_NOT_FOUND = -52,
  AX25_DEC_FAIL = -51,
  AX25_DEC_OK = 0
} ax25_decode_status_t;

typedef struct
{
  uint8_t address[AX25_MAX_ADDR_LEN];
  size_t address_len;
  uint16_t ctrl;
  size_t ctrl_len;
  uint8_t pid;
  uint8_t *info;
  size_t info_len;
  ax25_frame_type_t type;
} ax25_frame_t;

typedef struct
{
  ax25_decoding_state_t state;
  size_t decoded_num;
  uint8_t shift_reg;
  uint8_t dec_byte;
  uint8_t bit_cnt;
  scrambler_handle_t descrambler;
} ax25_handle_t;




#endif /* INC_AX25_H_ */
